信息技术 软件产品评价 质量特性及其使用指南 GB／T16260―1996

附录A（提示的附录） 
质量子特性

A1 引言 


本附录为一个说明性的质量模型，它将本标准中的特性进一步定义成子特性。这是使用该标准的质量评价过程模型进行质量测量之前的必需一步。以后的有关文档将涉及子特性的测量。

在文献中，已有很多此类质量模型，并在实践中得到应用。这些模型、术语及定义的成熟性还不足以将它们包含在一个标准中。然而，发表它们是为了鼓励在实践中得到使用，并为以后的版本积累经验。关键是对于软件产品来说，应该有一个至少具体到子特性一级的软件产品质量模型，而不在于这个模型必须完全是本附录给出的那种形式。

 

A2 质量子特性定义 

A2.1　功能性functionality

A2.1.1　适合性Suitability
与规定任务能否提供一组功能以及这组功能的适合程度有关的软件属性。
注：适合程度的例子是面向任务系统中由子功能构成功能是否合适、表容量是否合适等。

A2.1.2　准确性accuracy
与能否得到正确或相符的结果或效果有关的软件属性。
注：例如，此属性包括计算值所需的准确程度。


A2.1.3　互操作性；互用性interoperability
与同其他指定系统进行交互的能力有关的软件属性。
注：为避免可能与A2.6.4易替换性的含义相混淆，此处用互操作性（互用性）而不用兼容性（见A2 6.4）。


A2.1.4　依从性 compliance
使软件遵循有关的标准、约定、法规及类似规定的软件属性。


A2.1.5　安全性security
与防止对程序及数据的非授权的故意或意外访问的能力有关的软件属性。 


A2.2　可靠性reliability


A2.2.1 成熟性 maturity
与由软件故障引起失效的频度有关的软件属性。


A2.2.2 容错性 fault tolerance
与在软件故障或违反指定接口的情况下，维持规定的性能水平的能力有关的软件属性。
注：指定的性能水平包括失效防护能力。


A2.2.3 易恢复性 recoverability
与在失效发生后，重建其性能水平并恢复直接受影响数据的能力以及为达此目的所需的时间和努力有关的软件属性。


A2.3 易用性usability


A2.3.1 易理解性understandability
与用户为认识逻辑概念及其应用范围所花的努力有关的软件属性。 


A2.3.2 易学性　learnability
与用户为学习软件应用（例如运行控制、输入、输出）所花的努力有关的软件属性。


A2.3.3 易操作性operability
与用户为操作和运行控制所花努力有关的软件属性。


A2.4 效率 efficiency


A2.4.1 时间特性 time behaviour
与软件执行其功能时响应和处理时间以及吞吐量有关的软件属性。


A2.4.2 资源特性 resource behaviour
与在软件执行其功能时所使用的资源数量及其使用时间有关的软件属性。


A2.5 易维护性 maintainability


A2.5.1 易分析性 analysability
　　与为诊断缺陷或失效原因及为判定待修改的部分所需努力有关的软件属性。


A2.5.2 易改变性 changeability
　　与进行修改、排除错误或适应环境变化所需努力有关的软件属性。


A2.5.3　稳定性 stability
与修改所造成的未预料结果的风险有关的软件属性。


A2.5.4　易测试性 testability
与确认已修改软件所需的努力有关的软件属性。
注：此子特性的涵义可能会被研究中的修改加以改变。


A2.6可移植性 portability


A2.6.1　适应性 adaptability
与软件无需采用有别于为该软件准备的活动或手段就可能适应不同的规定环境有关的软件属性。 


A2.6.2　易安装性 installability
与应指定环境下安装软件所需努力有关的软件属性。


A2.6.3　遵循性 conformance
使软件遵循与可移植性有关的标准或约定的软件属性。


A2.6.4　易替换性 replaceability
与软件在该软件环境中用来替代指定的其他软件的机会和努力有关的软件属性。
注
1 为避免可能与A2.6.3互操作性（互用性）的含义相混淆，此处用易替换性而不用兼容性（见A2.1.3）。

2 特定软件的易替换性并不隐含此软件可由所考虑的软件所替代。

3 易替换性可能包含易安装性和适应性这两个属性。由于此概念的重要性，它已被采用作为一个独立的子特性。 


附录B （提示的附录）
工作历史


B1 背景 


软件产业正进入某种成熟的阶段，而与此同时软件正在成为许多现代产品中一个关键部分。软件的渗透性已使其成为贸易中的主要因素。此外，随着对安全性和质量的全球化新需要，有关软件质量评价
过程的国际性协定的需求变得至为重要。


基本上可用两种途径来保证产品质量，一是保证产品的开发过程，另一是评价最终产品的质量。这两种途径均很重要，且都要求有一系统来管理质量。该系统确定管理对质量的保证，指明其策略以及恰当的详细执行步骤。


为通过某些定量方法来评价产品质量，就要求有一组描述产品且构成评价基础的质量特性。本标准则为软件产品定义了这些特性。


B2 历史 

软件技术发展的现状尚不能提供一种非常明确的，且被广泛接受的描述方法来评价软件产品的质量。自1976年以来，已经有许多人为了定义一种软件质量基本框架做了许多工作。许多年来由McCall，
Boehm，美国空军及其他机构提出的模型多年来被采用并得到改进。然而，当今软件产品的用户或客户对软件质量仍难以理解或进行比较。


长时期以来，可靠性一直是衡量质量的唯一途径。在此期间，也提出过其地质量模型，并交付使用，尽管这些研究是有用的。但由于他们提出了许多质量观点，因而引起了混乱。为此，有必要建立一个标准模型。 


鉴于这个原因，ISO／IEC JTC1技术委员会才开始这项为达到所要求的一致性以及鼓励世界范围的标准化工作。


初步设想起始于1978年.1985年正式开始此项标准的编制工作,最初提出的模型采用了由应用或实现方面（或两者）决定的软件性质来描述软件质量。


ISO TC 97技术委员会系统整理这些性质的第一步工作由于缺乏定义而告失败。不同专家对术语有不问解释.因此.所有探讨的结构均较武断，没有一个共同的基础。 


结果决定编制一个标准的最好机会是规定一组基于质质量定义的即后来成为ISO 8402：1986（GB/T 6583）的一组成部分的特性。这个国际性的定义对各类产品和服务均能接受.它是从用户的需求出发的。
B3 ISO 六个软件质量特性 


对于选用本标准所描述的质量特性的要求如下：
――要包罗根据ISO质量定义的软件质量的一切方面：
――要以最小的重迭描述质量的特性；
――要与既定术语尽可能的靠近；
――为了清晰和便于使用.要建立不超过 6～8个特性的一组特性；
――要确定供进一步细地的软件产品的属性领域。


技术委员会的工作导致了上述一组特性。


然而一个只包含特性定义的纯术语标准是不会给子用户评价软件质量以足够支持的，因此就把如何进行软件产品质量评价的说明编入了本标准中。

在实践中对软件产品质量评价可能还需要除目前掌握的特性以外的其他特性，并需要有对于每一特性的度量。但是就目前的技术水平而言，在此领域还不能建立标准。然而要是等待这方面改进，则会大大地推迟本标准的发布。此外，许多国家在此方面都在进行有关工作，势必会建立许多不同的解决方法，以后对这些方法的协调则将费时和费钱。

鉴于上述原因，技术委员会现在发布本标准以便进一步协调今后工作。制定隶属于这六个质量特性的质量子特性工作正在技术委员会内进行，并计划发布若干个有关软件工程和软件质量的标准

1. 范围

　　本标准定义了六个特性，它们以最小的重迭描述了软件质量。这些特性可以作为进一步细化和描述软件性质的基线。本标准描述了如何使用质量特性来评价软件质量。
　　本标准正文不规定子特性和度量以及有关测量（masurement）、评级（rating）和评估（asscssment）的方法。本标准符合GB／T 6583－92的质量定义。
　　本标准的特性定义和相关的质量评价过程模型适用于对软件产品质量需求的确定以及在软件生存期中对软件产品质量的评价。
　　这些特性运用于各种软件，包括固件中的计算机程序和数据。
　　本标准供获取（acquisition）、开发（development）、使用（use）、支持（support）、维护（maintenancen）或评审（audit）软件的那些人所使用。

2. 引用标准

　　下列标准包含的条文，通过在本标准中引用而构成为本标准的条文。本标准出版时，所示版本均为有效。所有标准都会被修订.使用本标准的各方应探讨使用下列标准最新版本的可能性。
　　GB/T 6583－92　质量 术语（idt ISO 84O2：1986）
　　ISO/IEC 2382－2O：1990 信息技术 词汇第2O部分：系统开发

3. 定义

　　下列定义适用于本标准。
3.1  评估 assessment
　　为了确定一特定的软件模块、软件包或软件产品是验收合格还是发布，把特定的已成文的评估准则应用到该软件模块、软件包或软件产品上去的活动。
3.2特征 features
　　特征是一软件产品的可识别的性质，该性质与质量特性相关。
　　注：特征的例子包括路径长度、模块性、程序结构和注释。
3.3固件firmware
　　载有在用户环境中不能加以改变的计算机程序及数据的器件。包含在固件中的计算机程序和数据归类为软件；载有计算机程序和数据的电路归类为硬件。
3.4性能等级  level of performance
　　性能等级就是需求得到满足的程度，由一组质量特性的特定值来表示。
3.5测量 measurement
　　把软件质量度量应用到特定的软件产品上去的活动。
3.6质量quality
　　反映产品或服务满足明确或隐含需求能力的情征和特性的总和。（见GB／T 6583－92）
　　注：在合同环境中，需求是规定的，而在其他环境中，隐含需求则应加以标识和确定。（见GB／T 6583―92，注 1）
3.7评级 rating
　　把测量值映射到相应的评定等级的活动。用于确定软件某一质量特性的等级。
3.8等级  rating level
　　尺度中某一范围的值可用来按照明确或隐含的需求，对软件进行分级评定。相应的等级可能与不同的质量观点有关，例如用户、管理者或开发者的观点。这些级别被称为等级。
　　注：这些等级不同于GB／T6583中定义的“等级grades”。
3.9软件  software
　　与计算机系统的操作有关的程序、规程、规则及任何与之有关的文档。
3.10软件产品　software product
　　指定支付给用户的软件实体。
3.11 软件质量software quality
　　与软件产品满足明确或隐含需求的能力有关的待证和特性的总和。
3.12 软件质量评估准则  software quality assessment criteria
　　被用来确定一特定软件产品的总体质量是否能被接受的已定义的和成文的规则和条件的集合。质量由与软件产品有关的评定等级的集合来表示。
3.13 软件质量特性software quality characteristics
　　用以描述和评价软件产品质量的一组属性。一个软件质量特性可被细地成多级子特性。
3.14 软件质量度量  software quality metric
　　能被用来确定特定软件产品某一特性值的一种定量尺度和方法。

4  软件质量特性

　　软件质量可用下列特性来评价。
4.1  功能性
　　与一组功能及其指定的性质有关的一组属性。这里的功能是指满足明确或隐含的需求的那些功能。
　　注
　　1 这组属性以软件为满足需求做些什么来描述，而其他属性则以何时做和如何做来描述。
　　2 质量定义的注解运用于本特性中的明确或隐含的需求（见3.6）。
4.2  可靠性
　　与在规定的一段时间和条件下，软件维持其性能水平的能力有关的一组属性。
　　注
    l 软件不会老化。可靠性的种种局限是由于需求、设计和实现中的错误所致。由这些错误引起的故障取决于软件产品使用方式和程序任选项的选用方法，而不取决于时间的流逝。
    2 在GB／T 6583的定义中，可靠性是“…・完成需求功能的能力”，在本文件中，功能性仅是软件质量诸特性中的一个特性，因而，可靠性的定义已被扩充为“……维持其性能水平……”而不是“……完成需求功能……” 。
4.3  易用性
　　与一组规定或潜在的用户为使用软件所需作的努力和对这样的使用所作的评价有关的一组属性。
　　注
    1 “用户”可按最直接的意思解释为交互软件的用户。用户可包括操作员，最终用户和受使用该软件影响或依赖于该软件使用的非直接用户。易使用性必须针对软件涉及各种不同用户环境的全部，可能包括使用的准备和对结果的评价。
    2 本标准中定义为软件产品的一组特定属性的易使用性不同于由人类工效学观点所下的定义，在后者中其他特性诸如效率和效果也被看作是易使用性的组成部分。
4.4  效率
　　与在规定的条件下，软件的性能水平与所使用资源量之间关系有关的一组属性。
　　注：资源可包括其他软件产品，硬件设施，材料（如打印纸、软盘）和操作服务、维护和支持人员。
4.5  维护性
　　与进行指定的修改所需的努力有关的一组属性。
　　注：修改可包括为了适应环境的变化以及要求和功能规格说明的变化而对软件进行的修正、改进或更改。
4.6  可移植性
    与软件可从某一环境转移到另一环境的能力有关的一组属性。
    注：环境可包括系统体系结构环境、硬件或软件环境。

5  质量特性使用指南

5.1 用法 
　　本标准适用于对软件质量需求进行定义和对软件产品进行评价（测量、评级和评估）。它包括：
    ―一定义软件产品质量需求；
    ―一评价软件规格说明在开发期间是否满足质量需求；
    ―一描述已实现的软件的特证和属性（例如用户手册）；
    ―一对开发的软件在其未交付使用以前进行评价；
    ――在软件验收前.对它进行评价。
    对于本标准中所描述的特性，目前，仅有少数几种普遍接受的度量。标准小组或组织也许会建立他们自己的评价过程模型以及建立和确认与这些特性相关的且可以抽盖不同应用领域和生存同期阶段的度量方法。当无合适的度还可供使用又不能确定的情况下，有时也可能采用语言描述或“经验准则”。
    为了使用这六个质量特性来定义和评价.还必须制定组织或应用所特有的，或者两者共同特有的等级和准则。
    在告知评价结果时.应该说明进行质量评价时所使用的度量、等级以及准则。
    尽管没有普遍接受的软件分类体系，但确存在几种被广泛接受的软件类型。对于不同的软件。各个质量特性的重要性是不同的。例如，可靠性对于任务关键型系统软件是最重要的；效率对于时间关键型的实时系统软件是最重要的；而易使用性对于交互终端用户软件是最重要的。
    各个质量特性的重要性也因所考虑的观点不同而异。
5.2  软件质量的观点 
　　下面对其中某些观点进行论述。
5.2.1用户观点
　　GB／T 6583-92中的质量定义反映了用户观点，本标准的特性定义也反映了此观点。
    用户主要感兴趣的是使用软件、软件的性能和使用软件的效果。用户评价软件，对软件内部的各方面或软件是如何开发的情况一无所知。用户的问题会包括：
    ――软件是否具有所需求的功能？
    ――软件的可靠程度如何？
    ――软件的效率如何？
    ――软件使用是否方便？
    ――该软件转移到另一环境是否容易？
5.2.2 开发者观点
    由于软件质量特性对需求和验收均适用，故开发过程要求用户和开发者使用同样的软件质量特性。在开发现行软件时，隐含的需求必须反映在质量需求中。
    由于开发者负责生产满足质量需求的软件，放他们对中间产品质量以及最终产品质量都感兴趣。为了在各个开发阶段评价中间产品质量，开发者不得不对同样的特性使用不同的度量。因同一度量不适用
于生存周期的所有阶段。例如考虑效率时，用户用响应时间，而开发者在设计规格说明中则必须用路径长度、存取时间和等待时间。一般而言，适用于产品外部接口的度量被那些适用于它的结为的度量达所取代。
    开发者的观点还必须体现维护软件者需要的质量特性观点。
5.2.3 管理者观点
    管理者也许更注重总的质量而不是某一特性，为此须根据商务需求对各个特性赋于权值。
    管理者还需要从管理的准则.诸如进度拖延或成本超支。与质量的提高之间进行权衡。因为他希望以有限的成本、人力和时间使质量达到优化。
5.3  评价过程模型 
    图1 表示用本标准中定义的质量特性来评价软件质量的主要步骤。由于图1的高层次性，故一些具体的过程（如度量分析和确认）均未示出。 